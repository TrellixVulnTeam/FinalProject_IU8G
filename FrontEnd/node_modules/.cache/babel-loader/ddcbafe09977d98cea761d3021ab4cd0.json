{"remainingRequest":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\src\\pages\\gamePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\src\\pages\\gamePage.vue","mtime":1624302462333},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619698966213},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1619698980716},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":1619698964730},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619698966213},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":1619698986297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["gamePage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"d-flex flex-column justify-center align-center\">\r\n    <transition name=\"fade\">\r\n      <div class=\"popup-modal\" v-if=\"isVisible\">\r\n        <div class=\"window\" style=\" height:450px; max-width: 680px;\">\r\n          <slot>\r\n\r\n            <h2 class=\"titlegame\">הגענו לשלב המשחק</h2>\r\n\r\n            <p class=\"textgame\" style=\"color: black; direction: RTL; \">\r\n              כעת נציג לפניכם\r\n              {{ this.$root.store.numberOfScreensInGame }} מסכים. בכל מסך יהיו\r\n              {{ this.$root.store.numberOfImagesInGame }} תמונות מוקטנות אשר\r\n              לקוחות מהתמונות שראיתם בשלב הקודם. מתוך\r\n              {{ this.$root.store.numberOfImagesInGame }} התמונות עליכם יהיה\r\n              לבחור את {{ this.$root.store.limitSelectInGame }} התמונות שאתם הכי\r\n              אוהבים. המטרה בכל מסך היא לבחור את\r\n              {{ this.$root.store.limitSelectInGame }} התמונות שקיבלו את הציונים\r\n              הגבוהים ביותר בשלב דירוג התמונות. <br /><br />\r\n              עבור כל תמונה שבחרתם נכון תקבלו נקודה. כמו כן, ניתן לבטל בחירה של\r\n              תמונה מסוימת על ידי לחיצה נוספת עליה.\r\n            </p>\r\n            <h3 class=\"titlegame\">!בהצלחה</h3>\r\n            <br />\r\n            <b-row>\r\n              <b-col></b-col>\r\n              <b-col\r\n                ><b-button size=\"lg\" class=\"b-game\" block @click=\"close()\"\r\n                  >התחל</b-button\r\n                ></b-col\r\n              >\r\n              <b-col></b-col>\r\n            </b-row>\r\n          </slot>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n    <br />\r\n\r\n    <router-link to=\"/\">\r\n      <b-button color=\"primary\" class=\"btn-x\">\r\n        HOME\r\n      </b-button>\r\n    </router-link>\r\n    <h3>\r\n      <b>Page {{ screenNum }} / {{ screens }}</b>\r\n    </h3>\r\n    <div class=\"d-flex flex-row justify-center align-center\">\r\n      <v-select-image\r\n        ref=\"VSelectImage\"\r\n        class=\"w-1040\"\r\n        v-model=\"selectedItems\"\r\n        :items=\"items\"\r\n        :colorSchema=\"colorSchema\"\r\n        :h=\"100\"\r\n        uniqueKey=\"key\"\r\n        :maxSelectable=\"maxSelectable\"\r\n        @maxSelectionError=\"maxSelected()\"\r\n      />\r\n    </div>\r\n    <br />\r\n    <b-button size=\"lg\" class=\"btn\" v-on:click=\"save\" type=\"submit\">\r\n      NEXT\r\n    </b-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VSelectImage from \"../components/VSelectImage.vue\";\r\nexport default {\r\n  name: \"App\",\r\n  components: { \"v-select-image\": VSelectImage },\r\n  methods: {\r\n    open() {\r\n      this.isVisible = true;\r\n    },\r\n\r\n    close() {\r\n      this.isVisible = false;\r\n    },\r\n    maxSelected() {\r\n      this.$alert(\r\n        \"You can't select more than \" + this.maxSelectable + \" images.\",\r\n        \"Error\",\r\n        \"error\"\r\n      );\r\n    },\r\n    async save() {\r\n      if (this.selectedItems.length < this.maxSelectable)\r\n        this.$alert(\r\n          \"You need to select \" + this.maxSelectable + \" images\",\r\n          \"Error\",\r\n          \"error\"\r\n        );\r\n      else {\r\n        let scoreScreen = 0;\r\n        let imagesSelect = \"\";\r\n        for (let index in this.selectedItems) {\r\n          if (this.selectedItems[index].target == true) scoreScreen++;\r\n          imagesSelect = imagesSelect + this.selectedItems[index].key + \",\";\r\n        }\r\n        this.score = this.score + scoreScreen;\r\n        let saveScore;\r\n\r\n        try {\r\n          saveScore = await this.axios.get(\r\n            this.$root.store.base_url +\r\n              \"/users/saveScoreScreen/gameID/\" +\r\n              this.gameID +\r\n              \"/numOfScreen/\" +\r\n              this.screenNum +\r\n              \"/imagesSelect/\" +\r\n              imagesSelect +\r\n              \"/score/\" +\r\n              scoreScreen\r\n          );\r\n          if (saveScore.status !== 200) this.$router.replace(\"/NotFound\");\r\n        } catch (error) {\r\n          console.log(\"error.saveScore.status\", error.saveScore.status);\r\n          this.$router.replace(\"/NotFound\");\r\n          return;\r\n        }\r\n\r\n        if (this.screenNum == this.screens) {\r\n          let saveScoreGame;\r\n\r\n          try {\r\n            saveScoreGame = await this.axios.get(\r\n              this.$root.store.base_url +\r\n                \"/users/saveScoreGame/gameID/\" +\r\n                this.gameID +\r\n                \"/score/\" +\r\n                this.score\r\n            );\r\n            if (saveScoreGame.status !== 200) this.$router.replace(\"/NotFound\");\r\n          } catch (error) {\r\n            console.log(\r\n              \"error.saveScoreGame.status\",\r\n              error.saveScoreGame.status\r\n            );\r\n            this.$router.replace(\"/NotFound\");\r\n            return;\r\n          }\r\n          this.$alert(\r\n            \"Game Over! Your score in this round is: \" +\r\n              scoreScreen +\r\n              \"/\" +\r\n              this.maxSelectable +\r\n              \". \" +\r\n              \"You earned \" +\r\n              this.score +\r\n              \" points today. See you tommorow!\"\r\n          ).then(() => {\r\n            this.$router.push(\"/\");\r\n          });\r\n        } else {\r\n          this.$alert(\r\n            \"Your score in this round: \" +\r\n              scoreScreen +\r\n              \"/\" +\r\n              this.maxSelectable\r\n          ).then(() => {\r\n            this.screenNum++;\r\n            this.$refs.VSelectImage.clear();\r\n            this.items = [];\r\n            for (let num in this.allImages[this.index].imagesScreen) {\r\n              const data = {\r\n                key: this.allImages[this.index].imagesScreen[num].image_id,\r\n                backgroundImage: this.allImages[this.index].imagesScreen[num]\r\n                  .image,\r\n                target: this.allImages[this.index].imagesScreen[num].target,\r\n                selectable: true,\r\n              };\r\n              this.items.push(data);\r\n            }\r\n            this.index++;\r\n          });\r\n        }\r\n      }\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isVisible: true,\r\n\r\n      maxSelectable: 2,\r\n      selectedItems: [],\r\n      items: [],\r\n      colorSchema: \"#00cc44\",\r\n      screenNum: 1,\r\n      screens: \"\",\r\n      score: 0,\r\n      gameID: \"\",\r\n      allImages: [],\r\n      index: \"\",\r\n    };\r\n  },\r\n  watch: {\r\n    maxSelectable(newVal, oldVal) {\r\n      if (newVal < this.selectedItems.length) {\r\n        this.maxSelectable = oldVal;\r\n      }\r\n      if (this.items.length < newVal) {\r\n        this.maxSelectable = oldVal;\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    if (this.$root.store.email) {\r\n      if (\r\n        this.$root.store.numberOfImagesRating < this.$root.store.minImagesRating\r\n      ) {\r\n        this.$alert(\r\n          \"You did not rate enough photos, please continue to rate...\",\r\n          \"Error\",\r\n          \"error\"\r\n        );\r\n        this.$router.push(\"/ranking\");\r\n      } else {\r\n        let playToday;\r\n        try {\r\n          playToday = await this.axios.get(\r\n            this.$root.store.base_url + \"/users/checkIfPlayToday\"\r\n          );\r\n          if (playToday.status === 201) {\r\n\r\n            // not finish to play today\r\n            if (playToday.data[0].scoreGame == null) {\r\n              this.screens = this.$root.store.numberOfScreensInGame;\r\n              let response;\r\n              try {\r\n                response = await this.axios.get(\r\n                  this.$root.store.base_url +\r\n                    \"/users/getScreensGame/gameId/\" +\r\n                    playToday.data[0].game_id\r\n                );\r\n                if (response.status !== 200) this.$router.replace(\"/NotFound\");\r\n              } catch (error) {\r\n                console.log(\"error.response.status\", error.response.status);\r\n                this.$router.replace(\"/NotFound\");\r\n                return;\r\n              }\r\n              this.allImages = response.data;\r\n              this.gameID = playToday.data[0].game_id;\r\n              this.screenNum = this.allImages[0].screen;\r\n\r\n              //get score screens\r\n              if (this.screenNum > 1) {\r\n                let scoreScreens;\r\n                try {\r\n                  scoreScreens = await this.axios.get(\r\n                    this.$root.store.base_url +\r\n                      \"/users/getScoreScreens/gameId/\" +\r\n                      this.gameID\r\n                  );\r\n                  if (scoreScreens.status !== 200)\r\n                    this.$router.replace(\"/NotFound\");\r\n                } catch (error) {\r\n                  console.log(\r\n                    \"error.scoreScreens.status\",\r\n                    error.scoreScreens.status\r\n                  );\r\n                  this.$router.replace(\"/NotFound\");\r\n                  return;\r\n                }\r\n                this.score = scoreScreens.data[0].score;\r\n              }\r\n              for (let num in this.allImages[0].imagesScreen) {\r\n                const data = {\r\n                  key: this.allImages[0].imagesScreen[num].image_id,\r\n                  backgroundImage: this.allImages[0].imagesScreen[num].image,\r\n                  target: this.allImages[0].imagesScreen[num].target,\r\n                  selectable: true,\r\n                };\r\n                this.items.push(data);\r\n              }\r\n              this.index = 0;\r\n              if (this.index + 1 < this.allImages.length) this.index++;\r\n            } else {\r\n              this.$alert(\r\n                \"You already played today, please come back tomorrow!\",\r\n                \"Error\",\r\n                \"error\"\r\n              );\r\n              this.$router.replace(\"/\");\r\n            }\r\n          } else if (playToday.status !== 200)\r\n            this.$router.replace(\"/NotFound\");\r\n          else {\r\n            //not play today\r\n            const numberOfImages = this.$root.store.numberOfImagesInGame;\r\n            const limit = this.$root.store.limitSelectInGame;\r\n            this.screens = this.$root.store.numberOfScreensInGame;\r\n\r\n            let response;\r\n            try {\r\n              response = await this.axios.get(\r\n                this.$root.store.base_url +\r\n                  \"/users/getImagesForGame/amount/\" +\r\n                  numberOfImages +\r\n                  \"/numOfScreens/\" +\r\n                  this.screens +\r\n                  \"/numOfSelected/\" +\r\n                  limit\r\n              );\r\n              if (response.status !== 200) this.$router.replace(\"/NotFound\");\r\n            } catch (error) {\r\n              console.log(\"error.response.status\", error.response.status);\r\n              this.$router.replace(\"/NotFound\");\r\n              return;\r\n            }\r\n\r\n            this.allImages = response.data;\r\n            this.gameID = this.allImages[this.screens];\r\n            for (let num in this.allImages[this.screenNum - 1].imagesScreen) {\r\n              const data = {\r\n                key: this.allImages[this.screenNum - 1].imagesScreen[num]\r\n                  .image_id,\r\n                backgroundImage: this.allImages[this.screenNum - 1]\r\n                  .imagesScreen[num].image,\r\n                target: this.allImages[this.screenNum - 1].imagesScreen[num]\r\n                  .target,\r\n                selectable: true,\r\n              };\r\n              this.items.push(data);\r\n            }\r\n            this.index = this.screenNum;\r\n          }\r\n        } catch (error) {\r\n          console.log(\"error.playToday.status\", error.playToday.status);\r\n          this.$router.replace(\"/NotFound\");\r\n          return;\r\n        }\r\n      }\r\n    } else {\r\n      this.$router.push(\"/login\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.d-flex {\r\n  display: flex;\r\n}\r\n.flex-row {\r\n  flex-direction: row;\r\n}\r\n.flex-column {\r\n  flex-direction: column;\r\n}\r\n.justify-center {\r\n  justify-content: center;\r\n}\r\n.align-center {\r\n  align-items: center;\r\n}\r\n.w-1040 {\r\n  max-width: 1040px;\r\n}\r\n.mt-20 {\r\n  margin-top: 10px;\r\n}\r\n.mt-25 {\r\n  margin-top: 10px;\r\n}\r\npre {\r\n  counter-reset: line-numbering;\r\n  background: #2c3e50;\r\n  padding: 12px 0px 14px 0;\r\n  width: 600px;\r\n  color: #ecf0f1;\r\n  line-height: 100%;\r\n}\r\npre code .line::before {\r\n  content: counter(line-numbering);\r\n  counter-increment: line-numbering;\r\n  padding-right: 1em;\r\n  /* space after numbers */\r\n  padding-left: 8px;\r\n  width: 1.5em;\r\n  text-align: right;\r\n  opacity: 0.5;\r\n  color: white;\r\n}\r\n\r\n.item {\r\n  margin: 5px !important;\r\n  height: 220px !important;\r\n  width: 250px !important;\r\n  top: 10px !important;\r\n  left: 10px !important;\r\n}\r\n\r\n.item .isSelectedBox {\r\n  top: 10px !important;\r\n  left: 10px !important;\r\n}\r\n\r\n.swal2-confirm .swal2-styled .button {\r\n  width: 20px !important;\r\n  height: 30px !important;\r\n}\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.popup-modal {\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin-bottom: 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 1;\r\n}\r\n\r\n.window {\r\n  box-shadow: 2px 4px 8px rgba(0, 0, 0, 0.2);\r\n  max-width: 80%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: right;\r\n  color: black;\r\n  margin: auto;\r\n  position: relative;\r\n  border: 3px solid rgba(143, 241, 216, 0.87);\r\n  border-radius: 2px;\r\n  padding: 1.1rem;\r\n  background-color: rgba(251, 241, 226, 0.897);\r\n}\r\n.b-game {\r\n  font-size: large;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  color: black;\r\n}\r\n.button {\r\n  border-radius: 5px;\r\n  font-size: 25px;\r\n  width: 300px;\r\n  margin-left: 100px;\r\n}\r\n\r\n.btn {\r\n  margin-top: 8px;\r\n}\r\n.titlegame {\r\n  text-align: center;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  color: black;\r\n}\r\n\r\n.textgame {\r\n  font-size: large;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  text-align: right;\r\n  color: black;\r\n}\r\n.btn-x {\r\n  width: 7%;\r\n  margin-top: 1%;\r\n  margin-right: 2%;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/pages"}]}