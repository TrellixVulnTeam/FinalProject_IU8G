{"remainingRequest":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-excel-xlsx\\VueExcelXlsx.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-excel-xlsx\\VueExcelXlsx.vue","mtime":1619698986219},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619698966213},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1619698980716},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":1619698964730},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619698966213},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":1619698986297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBYTFNYIGZyb20gJ3hsc3gveGxzeCc7CndpbmRvdy4kID0gd2luZG93LmpRdWVyeSA9IHJlcXVpcmUoJ2pxdWVyeScpOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogInZ1ZS1leGNlbC14bHN4IiwKCiAgICBwcm9wczogewogICAgICAgIGNvbHVtbnM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIGRlZmF1bHQ6IFtdCiAgICAgICAgfSwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgICAgICBkZWZhdWx0OiBbXQogICAgICAgIH0sCiAgICAgICAgZmlsZW5hbWU6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnZXhjZWwnCiAgICAgICAgfSwKICAgICAgICBzaGVldG5hbWU6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnU2hlZXROYW1lJwogICAgICAgIH0KICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAgIGV4cG9ydEV4Y2VsKCkgewogICAgICAgICAgICBsZXQgY3JlYXRlWExTTEZvcm1hdE9iaiA9IFtdOwogICAgICAgICAgICBsZXQgbmV3WGxzSGVhZGVyID0gW107CiAgICAgICAgICAgIGxldCB2bSA9IHRoaXM7CiAgICAgICAgICAgIGlmICh2bS5jb2x1bW5zLmxlbmd0aCA9PT0gMCl7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQWRkIGNvbHVtbnMhIik7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHZtLmRhdGEubGVuZ3RoID09PSAwKXsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJBZGQgZGF0YSEiKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICAkLmVhY2godm0uY29sdW1ucywgZnVuY3Rpb24oaW5kZXgsIHZhbHVlKSB7CiAgICAgICAgICAgICAgICBuZXdYbHNIZWFkZXIucHVzaCh2YWx1ZS5sYWJlbCk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY3JlYXRlWExTTEZvcm1hdE9iai5wdXNoKG5ld1hsc0hlYWRlcik7CiAgICAgICAgICAgICQuZWFjaCh2bS5kYXRhLCBmdW5jdGlvbihpbmRleCwgdmFsdWUpIHsKICAgICAgICAgICAgICAgIGxldCBpbm5lclJvd0RhdGEgPSBbXTsKICAgICAgICAgICAgICAgICQuZWFjaCh2bS5jb2x1bW5zLCBmdW5jdGlvbihpbmRleCwgdmFsKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbC5kYXRhRm9ybWF0ICYmIHR5cGVvZiB2YWwuZGF0YUZvcm1hdCA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgICAgICAgICAgICAgICBpbm5lclJvd0RhdGEucHVzaCh2YWwuZGF0YUZvcm1hdCh2YWx1ZVt2YWwuZmllbGRdKSk7CiAgICAgICAgICAgICAgICAgICAgfWVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpbm5lclJvd0RhdGEucHVzaCh2YWx1ZVt2YWwuZmllbGRdKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNyZWF0ZVhMU0xGb3JtYXRPYmoucHVzaChpbm5lclJvd0RhdGEpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGxldCBmaWxlbmFtZSA9IHZtLmZpbGVuYW1lICsgIi54bHN4IjsKCiAgICAgICAgICAgIGxldCB3c19uYW1lID0gdm0uc2hlZXRuYW1lOwoKICAgICAgICAgICAgbGV0IHdiID0gWExTWC51dGlscy5ib29rX25ldygpLAogICAgICAgICAgICAgICAgd3MgPSBYTFNYLnV0aWxzLmFvYV90b19zaGVldChjcmVhdGVYTFNMRm9ybWF0T2JqKTsKICAgICAgICAgICAgWExTWC51dGlscy5ib29rX2FwcGVuZF9zaGVldCh3Yiwgd3MsIHdzX25hbWUpOwogICAgICAgICAgICBYTFNYLndyaXRlRmlsZSh3YiwgZmlsZW5hbWUpOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["VueExcelXlsx.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueExcelXlsx.vue","sourceRoot":"node_modules/vue-excel-xlsx","sourcesContent":["<template>\r\n    <button @click=\"exportExcel\">\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n    import XLSX from 'xlsx/xlsx';\r\n    window.$ = window.jQuery = require('jquery');\r\n\r\n    export default {\r\n        name: \"vue-excel-xlsx\",\r\n\r\n        props: {\r\n            columns: {\r\n                type: Array,\r\n                default: []\r\n            },\r\n            data: {\r\n                type: Array,\r\n                default: []\r\n            },\r\n            filename: {\r\n                type: String,\r\n                default: 'excel'\r\n            },\r\n            sheetname: {\r\n                type: String,\r\n                default: 'SheetName'\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            exportExcel() {\r\n                let createXLSLFormatObj = [];\r\n                let newXlsHeader = [];\r\n                let vm = this;\r\n                if (vm.columns.length === 0){\r\n                    console.log(\"Add columns!\");\r\n                    return;\r\n                }\r\n                if (vm.data.length === 0){\r\n                    console.log(\"Add data!\");\r\n                    return;\r\n                }\r\n                $.each(vm.columns, function(index, value) {\r\n                    newXlsHeader.push(value.label);\r\n                });\r\n\r\n                createXLSLFormatObj.push(newXlsHeader);\r\n                $.each(vm.data, function(index, value) {\r\n                    let innerRowData = [];\r\n                    $.each(vm.columns, function(index, val) {\r\n                        if (val.dataFormat && typeof val.dataFormat === 'function') {\r\n                            innerRowData.push(val.dataFormat(value[val.field]));\r\n                        }else {\r\n                            innerRowData.push(value[val.field]);\r\n                        }\r\n                    });\r\n                    createXLSLFormatObj.push(innerRowData);\r\n                });\r\n\r\n                let filename = vm.filename + \".xlsx\";\r\n\r\n                let ws_name = vm.sheetname;\r\n\r\n                let wb = XLSX.utils.book_new(),\r\n                    ws = XLSX.utils.aoa_to_sheet(createXLSLFormatObj);\r\n                XLSX.utils.book_append_sheet(wb, ws, ws_name);\r\n                XLSX.writeFile(wb, filename);\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}