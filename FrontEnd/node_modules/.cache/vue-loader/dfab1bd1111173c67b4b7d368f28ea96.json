{"remainingRequest":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\src\\pages\\mainPage.vue?vue&type=style&index=0&id=4b0a686c&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\src\\pages\\mainPage.vue","mtime":1608651858004},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbnRhaW5lciB7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQp9DQoNCkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9QWxsdXJhJyk7DQpAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJhbGV3YXknKTsNCg0KLnRpdGxlIHsNCiAgZm9udC1mYW1pbHk6ICdBbGx1cmEnOw0KICBjb2xvcjogYmxhY2s7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg0K"},{"version":3,"sources":["mainPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"mainPage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <b-container class=\"container\">\r\n    <h1 class=\"title\">\r\n      Hello\r\n    </h1>\r\n    <!-- <img :src=\"dataUrl\"> -->\r\n    <b-row>\r\n      <b-col v-if=\"!$root.store.email\">\r\n        <login-page></login-page>\r\n      </b-col>\r\n      <b-col v-else>\r\n        <h2>connect</h2>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport LoginPage from '../pages/loginPage'\r\nexport default {\r\n  components: {\r\n    LoginPage,\r\n  },\r\n  methods : {\r\n    async dataUrl(){\r\n      try {\r\n        const image = await this.axios.get(\r\n          this.$root.store.base_url + \"/images/getImage\"\r\n        );\r\n        console.log(image);\r\n    \r\n        return 'data:image/jpeg;base64,' + btoa(\r\n            new Uint8Array(image.img.toString('base64'))\r\n            .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n        );\r\n      }\r\n      catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n}\r\n\r\n//   async created() {\r\n//     if (this.$root.store.username) {\r\n//     }\r\n//   },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Allura');\r\n@import url('https://fonts.googleapis.com/css?family=Raleway');\r\n\r\n.title {\r\n  font-family: 'Allura';\r\n  color: black;\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n"]}]}