{"remainingRequest":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\src\\components\\VSelectImage.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\src\\components\\VSelectImage.vue","mtime":1624302462228},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\css-loader\\dist\\cjs.js","mtime":1619698968439},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1619698986297},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\postcss-loader\\src\\index.js","mtime":1619698974988},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1619698978214},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619698966213},{"path":"C:\\Users\\User\\Documents\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":1619698986297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnYtc2VsZWN0LWltYWdlLWl0ZW1zIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgZmxleC13cmFwOiB3cmFwOw0KfQ0KDQo="},{"version":3,"sources":["VSelectImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA;AACA","file":"VSelectImage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"v-select-image-items\">\r\n    <item\r\n      v-for=\"item in items\"\r\n      :item=\"item\"\r\n      @clickTrigger=\"itemClick(item)\"\r\n      :key=\"item.id\"\r\n      :selected=\"isSelected(item)\"\r\n      :colorSchema=\"colorSchema != '' ? colorSchema : '#8B8B8B'\"\r\n      style\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport item from \"./item\";\r\nexport default {\r\n  name: \"v-select-image\",\r\n  components: { item },\r\n  props: {\r\n    items: Array,\r\n    colorSchema: {\r\n      required: false,\r\n      type: String,\r\n      default: \"#8B8B8B\",\r\n    },\r\n    maxSelectable: {\r\n      required: false,\r\n      type: [String, Number],\r\n      default: -1,\r\n    },\r\n    uniqueKey: {\r\n      required: false,\r\n      type: String,\r\n      default: \"id\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      selectedItems: [],\r\n    };\r\n  },\r\n  methods: {\r\n    clear() {\r\n      this.selectedItems = [];\r\n    },\r\n    itemClick(item) {\r\n      const maxSelectableItem = parseInt(this.maxSelectable);\r\n      const isSelectedBefore = this.selectedItems.findIndex((selectedItem) => {\r\n        return selectedItem[this.uniqueKey] == item[this.uniqueKey];\r\n      });\r\n      if (item.selectable) {\r\n        if (isSelectedBefore != -1) {\r\n          this.selectedItems.splice(isSelectedBefore, 1);\r\n        } else {\r\n          // This will be use if user selected before (NOT READY YET!)\r\n          // this.selectedItems.forEach(selectedItem => {\r\n          //   if(maxSelectableItem != -1 && selectedItem.selectable == false) {\r\n          //     maxSelectableItem = maxSelectableItem + 1\r\n          //   }\r\n          // });\r\n          if (\r\n            maxSelectableItem != -1 &&\r\n            this.selectedItems.length >= maxSelectableItem\r\n          ) {\r\n            return this.$emit(\"maxSelectionError\");\r\n          }\r\n          this.selectedItems.push(item);\r\n        }\r\n      }\r\n      this.$emit(\"input\", this.selectedItems);\r\n    },\r\n    isSelected(selected) {\r\n      const isSelected = this.selectedItems.find((item) => {\r\n        return item[this.uniqueKey] == selected[this.uniqueKey];\r\n      });\r\n      return !!isSelected;\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    this.clear();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.v-select-image-items {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n</style>\r\n"]}]}