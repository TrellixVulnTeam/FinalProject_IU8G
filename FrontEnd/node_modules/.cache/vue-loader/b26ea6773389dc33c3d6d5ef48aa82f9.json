{"remainingRequest":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\src\\pages\\observationPage.vue?vue&type=template&id=1e053287&scoped=true&","dependencies":[{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\src\\pages\\observationPage.vue","mtime":1618242731509},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liron\\OneDrive\\מסמכים\\GitHub\\FinalProject\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}